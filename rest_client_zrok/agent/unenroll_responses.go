// Code generated by go-swagger; DO NOT EDIT.

package agent

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// UnenrollReader is a Reader for the Unenroll structure.
type UnenrollReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UnenrollReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUnenrollOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUnenrollBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUnenrollUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUnenrollInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /agent/unenroll] unenroll", response, response.Code())
	}
}

// NewUnenrollOK creates a UnenrollOK with default headers values
func NewUnenrollOK() *UnenrollOK {
	return &UnenrollOK{}
}

/*
UnenrollOK describes a response with status code 200, with default header values.

ok
*/
type UnenrollOK struct {
}

// IsSuccess returns true when this unenroll o k response has a 2xx status code
func (o *UnenrollOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this unenroll o k response has a 3xx status code
func (o *UnenrollOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this unenroll o k response has a 4xx status code
func (o *UnenrollOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this unenroll o k response has a 5xx status code
func (o *UnenrollOK) IsServerError() bool {
	return false
}

// IsCode returns true when this unenroll o k response a status code equal to that given
func (o *UnenrollOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the unenroll o k response
func (o *UnenrollOK) Code() int {
	return 200
}

func (o *UnenrollOK) Error() string {
	return fmt.Sprintf("[POST /agent/unenroll][%d] unenrollOK ", 200)
}

func (o *UnenrollOK) String() string {
	return fmt.Sprintf("[POST /agent/unenroll][%d] unenrollOK ", 200)
}

func (o *UnenrollOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUnenrollBadRequest creates a UnenrollBadRequest with default headers values
func NewUnenrollBadRequest() *UnenrollBadRequest {
	return &UnenrollBadRequest{}
}

/*
UnenrollBadRequest describes a response with status code 400, with default header values.

bad request; not enrolled
*/
type UnenrollBadRequest struct {
}

// IsSuccess returns true when this unenroll bad request response has a 2xx status code
func (o *UnenrollBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this unenroll bad request response has a 3xx status code
func (o *UnenrollBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this unenroll bad request response has a 4xx status code
func (o *UnenrollBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this unenroll bad request response has a 5xx status code
func (o *UnenrollBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this unenroll bad request response a status code equal to that given
func (o *UnenrollBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the unenroll bad request response
func (o *UnenrollBadRequest) Code() int {
	return 400
}

func (o *UnenrollBadRequest) Error() string {
	return fmt.Sprintf("[POST /agent/unenroll][%d] unenrollBadRequest ", 400)
}

func (o *UnenrollBadRequest) String() string {
	return fmt.Sprintf("[POST /agent/unenroll][%d] unenrollBadRequest ", 400)
}

func (o *UnenrollBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUnenrollUnauthorized creates a UnenrollUnauthorized with default headers values
func NewUnenrollUnauthorized() *UnenrollUnauthorized {
	return &UnenrollUnauthorized{}
}

/*
UnenrollUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type UnenrollUnauthorized struct {
}

// IsSuccess returns true when this unenroll unauthorized response has a 2xx status code
func (o *UnenrollUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this unenroll unauthorized response has a 3xx status code
func (o *UnenrollUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this unenroll unauthorized response has a 4xx status code
func (o *UnenrollUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this unenroll unauthorized response has a 5xx status code
func (o *UnenrollUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this unenroll unauthorized response a status code equal to that given
func (o *UnenrollUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the unenroll unauthorized response
func (o *UnenrollUnauthorized) Code() int {
	return 401
}

func (o *UnenrollUnauthorized) Error() string {
	return fmt.Sprintf("[POST /agent/unenroll][%d] unenrollUnauthorized ", 401)
}

func (o *UnenrollUnauthorized) String() string {
	return fmt.Sprintf("[POST /agent/unenroll][%d] unenrollUnauthorized ", 401)
}

func (o *UnenrollUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUnenrollInternalServerError creates a UnenrollInternalServerError with default headers values
func NewUnenrollInternalServerError() *UnenrollInternalServerError {
	return &UnenrollInternalServerError{}
}

/*
UnenrollInternalServerError describes a response with status code 500, with default header values.

internal server error
*/
type UnenrollInternalServerError struct {
}

// IsSuccess returns true when this unenroll internal server error response has a 2xx status code
func (o *UnenrollInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this unenroll internal server error response has a 3xx status code
func (o *UnenrollInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this unenroll internal server error response has a 4xx status code
func (o *UnenrollInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this unenroll internal server error response has a 5xx status code
func (o *UnenrollInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this unenroll internal server error response a status code equal to that given
func (o *UnenrollInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the unenroll internal server error response
func (o *UnenrollInternalServerError) Code() int {
	return 500
}

func (o *UnenrollInternalServerError) Error() string {
	return fmt.Sprintf("[POST /agent/unenroll][%d] unenrollInternalServerError ", 500)
}

func (o *UnenrollInternalServerError) String() string {
	return fmt.Sprintf("[POST /agent/unenroll][%d] unenrollInternalServerError ", 500)
}

func (o *UnenrollInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
UnenrollBody unenroll body
swagger:model UnenrollBody
*/
type UnenrollBody struct {

	// env z Id
	EnvZID string `json:"envZId,omitempty"`
}

// Validate validates this unenroll body
func (o *UnenrollBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this unenroll body based on context it is used
func (o *UnenrollBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *UnenrollBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UnenrollBody) UnmarshalBinary(b []byte) error {
	var res UnenrollBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
