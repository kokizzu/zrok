// Code generated by go-swagger; DO NOT EDIT.

package agent

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// RemoteUnaccessReader is a Reader for the RemoteUnaccess structure.
type RemoteUnaccessReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RemoteUnaccessReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRemoteUnaccessOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewRemoteUnaccessUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewRemoteUnaccessInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 502:
		result := NewRemoteUnaccessBadGateway()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /agent/unaccess] remoteUnaccess", response, response.Code())
	}
}

// NewRemoteUnaccessOK creates a RemoteUnaccessOK with default headers values
func NewRemoteUnaccessOK() *RemoteUnaccessOK {
	return &RemoteUnaccessOK{}
}

/*
RemoteUnaccessOK describes a response with status code 200, with default header values.

ok
*/
type RemoteUnaccessOK struct {
}

// IsSuccess returns true when this remote unaccess o k response has a 2xx status code
func (o *RemoteUnaccessOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this remote unaccess o k response has a 3xx status code
func (o *RemoteUnaccessOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remote unaccess o k response has a 4xx status code
func (o *RemoteUnaccessOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this remote unaccess o k response has a 5xx status code
func (o *RemoteUnaccessOK) IsServerError() bool {
	return false
}

// IsCode returns true when this remote unaccess o k response a status code equal to that given
func (o *RemoteUnaccessOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the remote unaccess o k response
func (o *RemoteUnaccessOK) Code() int {
	return 200
}

func (o *RemoteUnaccessOK) Error() string {
	return fmt.Sprintf("[POST /agent/unaccess][%d] remoteUnaccessOK ", 200)
}

func (o *RemoteUnaccessOK) String() string {
	return fmt.Sprintf("[POST /agent/unaccess][%d] remoteUnaccessOK ", 200)
}

func (o *RemoteUnaccessOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRemoteUnaccessUnauthorized creates a RemoteUnaccessUnauthorized with default headers values
func NewRemoteUnaccessUnauthorized() *RemoteUnaccessUnauthorized {
	return &RemoteUnaccessUnauthorized{}
}

/*
RemoteUnaccessUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type RemoteUnaccessUnauthorized struct {
}

// IsSuccess returns true when this remote unaccess unauthorized response has a 2xx status code
func (o *RemoteUnaccessUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this remote unaccess unauthorized response has a 3xx status code
func (o *RemoteUnaccessUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remote unaccess unauthorized response has a 4xx status code
func (o *RemoteUnaccessUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this remote unaccess unauthorized response has a 5xx status code
func (o *RemoteUnaccessUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this remote unaccess unauthorized response a status code equal to that given
func (o *RemoteUnaccessUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the remote unaccess unauthorized response
func (o *RemoteUnaccessUnauthorized) Code() int {
	return 401
}

func (o *RemoteUnaccessUnauthorized) Error() string {
	return fmt.Sprintf("[POST /agent/unaccess][%d] remoteUnaccessUnauthorized ", 401)
}

func (o *RemoteUnaccessUnauthorized) String() string {
	return fmt.Sprintf("[POST /agent/unaccess][%d] remoteUnaccessUnauthorized ", 401)
}

func (o *RemoteUnaccessUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRemoteUnaccessInternalServerError creates a RemoteUnaccessInternalServerError with default headers values
func NewRemoteUnaccessInternalServerError() *RemoteUnaccessInternalServerError {
	return &RemoteUnaccessInternalServerError{}
}

/*
RemoteUnaccessInternalServerError describes a response with status code 500, with default header values.

internal server error
*/
type RemoteUnaccessInternalServerError struct {
}

// IsSuccess returns true when this remote unaccess internal server error response has a 2xx status code
func (o *RemoteUnaccessInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this remote unaccess internal server error response has a 3xx status code
func (o *RemoteUnaccessInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remote unaccess internal server error response has a 4xx status code
func (o *RemoteUnaccessInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this remote unaccess internal server error response has a 5xx status code
func (o *RemoteUnaccessInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this remote unaccess internal server error response a status code equal to that given
func (o *RemoteUnaccessInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the remote unaccess internal server error response
func (o *RemoteUnaccessInternalServerError) Code() int {
	return 500
}

func (o *RemoteUnaccessInternalServerError) Error() string {
	return fmt.Sprintf("[POST /agent/unaccess][%d] remoteUnaccessInternalServerError ", 500)
}

func (o *RemoteUnaccessInternalServerError) String() string {
	return fmt.Sprintf("[POST /agent/unaccess][%d] remoteUnaccessInternalServerError ", 500)
}

func (o *RemoteUnaccessInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRemoteUnaccessBadGateway creates a RemoteUnaccessBadGateway with default headers values
func NewRemoteUnaccessBadGateway() *RemoteUnaccessBadGateway {
	return &RemoteUnaccessBadGateway{}
}

/*
RemoteUnaccessBadGateway describes a response with status code 502, with default header values.

bad gateway; agent not reachable
*/
type RemoteUnaccessBadGateway struct {
}

// IsSuccess returns true when this remote unaccess bad gateway response has a 2xx status code
func (o *RemoteUnaccessBadGateway) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this remote unaccess bad gateway response has a 3xx status code
func (o *RemoteUnaccessBadGateway) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remote unaccess bad gateway response has a 4xx status code
func (o *RemoteUnaccessBadGateway) IsClientError() bool {
	return false
}

// IsServerError returns true when this remote unaccess bad gateway response has a 5xx status code
func (o *RemoteUnaccessBadGateway) IsServerError() bool {
	return true
}

// IsCode returns true when this remote unaccess bad gateway response a status code equal to that given
func (o *RemoteUnaccessBadGateway) IsCode(code int) bool {
	return code == 502
}

// Code gets the status code for the remote unaccess bad gateway response
func (o *RemoteUnaccessBadGateway) Code() int {
	return 502
}

func (o *RemoteUnaccessBadGateway) Error() string {
	return fmt.Sprintf("[POST /agent/unaccess][%d] remoteUnaccessBadGateway ", 502)
}

func (o *RemoteUnaccessBadGateway) String() string {
	return fmt.Sprintf("[POST /agent/unaccess][%d] remoteUnaccessBadGateway ", 502)
}

func (o *RemoteUnaccessBadGateway) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
RemoteUnaccessBody remote unaccess body
swagger:model RemoteUnaccessBody
*/
type RemoteUnaccessBody struct {

	// env z Id
	EnvZID string `json:"envZId,omitempty"`

	// frontend token
	FrontendToken string `json:"frontendToken,omitempty"`
}

// Validate validates this remote unaccess body
func (o *RemoteUnaccessBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this remote unaccess body based on context it is used
func (o *RemoteUnaccessBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *RemoteUnaccessBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *RemoteUnaccessBody) UnmarshalBinary(b []byte) error {
	var res RemoteUnaccessBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
