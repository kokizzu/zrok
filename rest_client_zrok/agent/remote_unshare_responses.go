// Code generated by go-swagger; DO NOT EDIT.

package agent

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// RemoteUnshareReader is a Reader for the RemoteUnshare structure.
type RemoteUnshareReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RemoteUnshareReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRemoteUnshareOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewRemoteUnshareUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewRemoteUnshareInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 502:
		result := NewRemoteUnshareBadGateway()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /agent/unshare] remoteUnshare", response, response.Code())
	}
}

// NewRemoteUnshareOK creates a RemoteUnshareOK with default headers values
func NewRemoteUnshareOK() *RemoteUnshareOK {
	return &RemoteUnshareOK{}
}

/*
RemoteUnshareOK describes a response with status code 200, with default header values.

ok
*/
type RemoteUnshareOK struct {
}

// IsSuccess returns true when this remote unshare o k response has a 2xx status code
func (o *RemoteUnshareOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this remote unshare o k response has a 3xx status code
func (o *RemoteUnshareOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remote unshare o k response has a 4xx status code
func (o *RemoteUnshareOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this remote unshare o k response has a 5xx status code
func (o *RemoteUnshareOK) IsServerError() bool {
	return false
}

// IsCode returns true when this remote unshare o k response a status code equal to that given
func (o *RemoteUnshareOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the remote unshare o k response
func (o *RemoteUnshareOK) Code() int {
	return 200
}

func (o *RemoteUnshareOK) Error() string {
	return fmt.Sprintf("[POST /agent/unshare][%d] remoteUnshareOK ", 200)
}

func (o *RemoteUnshareOK) String() string {
	return fmt.Sprintf("[POST /agent/unshare][%d] remoteUnshareOK ", 200)
}

func (o *RemoteUnshareOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRemoteUnshareUnauthorized creates a RemoteUnshareUnauthorized with default headers values
func NewRemoteUnshareUnauthorized() *RemoteUnshareUnauthorized {
	return &RemoteUnshareUnauthorized{}
}

/*
RemoteUnshareUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type RemoteUnshareUnauthorized struct {
}

// IsSuccess returns true when this remote unshare unauthorized response has a 2xx status code
func (o *RemoteUnshareUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this remote unshare unauthorized response has a 3xx status code
func (o *RemoteUnshareUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remote unshare unauthorized response has a 4xx status code
func (o *RemoteUnshareUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this remote unshare unauthorized response has a 5xx status code
func (o *RemoteUnshareUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this remote unshare unauthorized response a status code equal to that given
func (o *RemoteUnshareUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the remote unshare unauthorized response
func (o *RemoteUnshareUnauthorized) Code() int {
	return 401
}

func (o *RemoteUnshareUnauthorized) Error() string {
	return fmt.Sprintf("[POST /agent/unshare][%d] remoteUnshareUnauthorized ", 401)
}

func (o *RemoteUnshareUnauthorized) String() string {
	return fmt.Sprintf("[POST /agent/unshare][%d] remoteUnshareUnauthorized ", 401)
}

func (o *RemoteUnshareUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRemoteUnshareInternalServerError creates a RemoteUnshareInternalServerError with default headers values
func NewRemoteUnshareInternalServerError() *RemoteUnshareInternalServerError {
	return &RemoteUnshareInternalServerError{}
}

/*
RemoteUnshareInternalServerError describes a response with status code 500, with default header values.

internal server error
*/
type RemoteUnshareInternalServerError struct {
}

// IsSuccess returns true when this remote unshare internal server error response has a 2xx status code
func (o *RemoteUnshareInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this remote unshare internal server error response has a 3xx status code
func (o *RemoteUnshareInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remote unshare internal server error response has a 4xx status code
func (o *RemoteUnshareInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this remote unshare internal server error response has a 5xx status code
func (o *RemoteUnshareInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this remote unshare internal server error response a status code equal to that given
func (o *RemoteUnshareInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the remote unshare internal server error response
func (o *RemoteUnshareInternalServerError) Code() int {
	return 500
}

func (o *RemoteUnshareInternalServerError) Error() string {
	return fmt.Sprintf("[POST /agent/unshare][%d] remoteUnshareInternalServerError ", 500)
}

func (o *RemoteUnshareInternalServerError) String() string {
	return fmt.Sprintf("[POST /agent/unshare][%d] remoteUnshareInternalServerError ", 500)
}

func (o *RemoteUnshareInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRemoteUnshareBadGateway creates a RemoteUnshareBadGateway with default headers values
func NewRemoteUnshareBadGateway() *RemoteUnshareBadGateway {
	return &RemoteUnshareBadGateway{}
}

/*
RemoteUnshareBadGateway describes a response with status code 502, with default header values.

bad gateway; agent not reachable
*/
type RemoteUnshareBadGateway struct {
}

// IsSuccess returns true when this remote unshare bad gateway response has a 2xx status code
func (o *RemoteUnshareBadGateway) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this remote unshare bad gateway response has a 3xx status code
func (o *RemoteUnshareBadGateway) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remote unshare bad gateway response has a 4xx status code
func (o *RemoteUnshareBadGateway) IsClientError() bool {
	return false
}

// IsServerError returns true when this remote unshare bad gateway response has a 5xx status code
func (o *RemoteUnshareBadGateway) IsServerError() bool {
	return true
}

// IsCode returns true when this remote unshare bad gateway response a status code equal to that given
func (o *RemoteUnshareBadGateway) IsCode(code int) bool {
	return code == 502
}

// Code gets the status code for the remote unshare bad gateway response
func (o *RemoteUnshareBadGateway) Code() int {
	return 502
}

func (o *RemoteUnshareBadGateway) Error() string {
	return fmt.Sprintf("[POST /agent/unshare][%d] remoteUnshareBadGateway ", 502)
}

func (o *RemoteUnshareBadGateway) String() string {
	return fmt.Sprintf("[POST /agent/unshare][%d] remoteUnshareBadGateway ", 502)
}

func (o *RemoteUnshareBadGateway) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
RemoteUnshareBody remote unshare body
swagger:model RemoteUnshareBody
*/
type RemoteUnshareBody struct {

	// env z Id
	EnvZID string `json:"envZId,omitempty"`

	// token
	Token string `json:"token,omitempty"`
}

// Validate validates this remote unshare body
func (o *RemoteUnshareBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this remote unshare body based on context it is used
func (o *RemoteUnshareBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *RemoteUnshareBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *RemoteUnshareBody) UnmarshalBinary(b []byte) error {
	var res RemoteUnshareBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
